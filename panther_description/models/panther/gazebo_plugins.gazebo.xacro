<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:include filename="$(find panther_description)/models/panther/components/rplidar_s1.gazebo.xacro" />
  <xacro:include filename="$(find panther_description)/models/panther/components/velodyne_puck.gazebo.xacro" />
  <xacro:include filename="$(find panther_description)/models/panther/components/ouster_os1_32.gazebo.xacro" />
  <xacro:include filename="$(find panther_description)/models/panther/components/orbbec_astra.gazebo.xacro" />

  <xacro:macro name="wheel_driver" params="wheel_props common_props">
    <xacro:if value="${wheel_props['simulation']['driver'] == 'libgazebo_ros_diff_drive'}">
      <gazebo>
        <plugin name='skid_steer_drive' filename='libgazebo_ros_diff_drive.so'>
          <ros>
          </ros>
          <update_rate>10</update_rate>
          <num_wheel_pairs>2</num_wheel_pairs>
          <left_joint>front_left_wheel_joint</left_joint>
          <right_joint>front_right_wheel_joint</right_joint>
          <left_joint>rear_left_wheel_joint</left_joint>
          <right_joint>rear_right_wheel_joint</right_joint>
          <wheel_separation>${wheel_props['wheels']['wheel_separation']}</wheel_separation>
          <wheel_separation>${wheel_props['wheels']['wheel_separation']}</wheel_separation>
          <wheel_diameter>${wheel_props['wheels']['diameter']}</wheel_diameter>
          <wheel_diameter>${wheel_props['wheels']['diameter']}</wheel_diameter>
          <max_wheel_torque>${common_props['motors']['max_torque']}</max_wheel_torque>
          <max_wheel_acceleration>2.0</max_wheel_acceleration>
          <publish_odom>true</publish_odom>
          <publish_odom_tf>true</publish_odom_tf>
          <publish_wheel_tf>true</publish_wheel_tf>
          <odometry_frame>odom</odometry_frame>
          <robot_base_frame>base_link</robot_base_frame>
        </plugin>
      </gazebo>
    </xacro:if>
    
    <xacro:if value="${wheel_props['simulation']['driver'] == 'libgazebo_ros_planar_move'}">
      <gazebo>
        <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
          <ros>
          </ros>
          <update_rate>10</update_rate>
          <publish_rate>10</publish_rate>
          <publish_odom>true</publish_odom>
          <publish_odom_tf>true</publish_odom_tf>
          <odometry_frame>odom</odometry_frame>
          <robot_base_frame>base_link</robot_base_frame>
          <covariance_x>0.0001</covariance_x>
          <covariance_y>0.0001</covariance_y>
          <covariance_yaw>0.01</covariance_yaw>
        </plugin>
      </gazebo>
    </xacro:if>

    <!-- publish joint states -->
    <gazebo>
      <plugin name="joint_states" filename="libgazebo_ros_joint_state_publisher.so">
        <joint_name>front_left_wheel_joint</joint_name>
        <joint_name>front_right_wheel_joint</joint_name>

        <joint_name>rear_left_wheel_joint</joint_name>
        <joint_name>rear_right_wheel_joint</joint_name>
      </plugin>
    </gazebo>

    <!-- based on PhidgetSpatial datasheet -->
    <xacro:property name="imu_acc_noise"  value="${280.0*1e-6*9.81}" />
    <xacro:property name="imu_acc_drift"  value="${40.6*1e-6*9.81}" />
    <xacro:property name="imu_gyro_noise" value="${0.095*(pi/180.0)}" />
    <xacro:property name="imu_gyro_drift" value="${0.0042*(pi/180.0)}" />
    <gazebo>
      <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
        <robotNamespace>/</robotNamespace>
        <updateRate>100.0</updateRate>
        <bodyName>imu_link</bodyName>
        <topicName>imu</topicName>
        <accelDrift>${imu_acc_drift} ${imu_acc_drift} ${imu_acc_drift}</accelDrift>
        <accelGaussianNoise>${imu_acc_noise} ${imu_acc_noise} ${imu_acc_noise}</accelGaussianNoise>
        <rateDrift>${imu_gyro_drift} ${imu_gyro_drift} ${imu_gyro_drift}</rateDrift>
        <rateGaussianNoise>${imu_gyro_noise} ${imu_gyro_noise} ${imu_gyro_noise}</rateGaussianNoise>
      </plugin>
    </gazebo>

    <!-- based on Teltonika RUTX11 datasheet and measuremets-->
    <gazebo>
      <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
        <updateRate>40</updateRate>
        <robotNamespace>/</robotNamespace>
        <bodyName>gps_link</bodyName>
        <frameId>gps_link</frameId>
        <topicName>/global_position/fix</topicName>
        <velocityTopicName>/global_position/vel</velocityTopicName>
        <referenceLatitude>53.1978</referenceLatitude>
        <referenceLongitude>18.3735</referenceLongitude>
        <referenceHeading>0</referenceHeading>
        <referenceAltitude>0</referenceAltitude>
        <drift>0.0001 0.0001 0.0001</drift>
        <gaussianNoise>3.0 3.0 3.0</gaussianNoise>
      </plugin>
    </gazebo>

  </xacro:macro>
</robot>
