<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:macro name="ouster_os1_32"
               params="parent_link xyz rpy
                       use_gpu:=false
                       tf_prefix:=None
                       topic:=os_lidar
                       frame_id:=os_lidar">

    <xacro:if value="${use_gpu}">
      <xacro:property name="ray_type" value="gpu_ray" />
      <xacro:property name="plugin_file_name" value="libgazebo_ros_gpu_ray_sensor.so" />
    </xacro:if>
    <xacro:unless value="${use_gpu}">
      <xacro:property name="ray_type" value="ray" />
      <xacro:property name="plugin_file_name" value="libgazebo_ros_ray_sensor.so" />
    </xacro:unless>

    <xacro:if value="${tf_prefix == 'None'}">
      <xacro:property name="tf_prefix_ext" value="" />
    </xacro:if>
    <xacro:unless value="${tf_prefix == 'None'}">
      <xacro:property name="tf_prefix_ext" value="${tf_prefix}" />
    </xacro:unless>

    <link name="${tf_prefix_ext}ouster_os1_32_link">
      <visual>
        <geometry>
          <mesh filename="file://$(find panther_description)/meshes/components/ouster_os1_32.stl" scale="1 1 0.65" />
        </geometry>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 ${pi/2.0}"/>
        <material name="Grey"/>
      </visual>

      <collision>
        <geometry>
          <cylinder radius="${0.0753/2.0}" length="0.0435" />
        </geometry>
        <origin xyz="0.0 0.0 ${0.0435/2.0}" rpy="0.0 0.0 0.0"/>
      </collision>

      <inertial>
          <mass value="0.447" />
          <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1" />
      </inertial>
    </link>

    <link name="${tf_prefix_ext}${frame_id}"></link>

    <joint name="${parent_link}_to_${tf_prefix_ext}ouster_os1_32_link_joint" type="fixed">
      <origin xyz="${xyz}" rpy="${rpy}" />
      <parent link="${parent_link}" />
      <child link="${tf_prefix_ext}ouster_os1_32_link" />
    </joint>

    <joint name="${tf_prefix_ext}ouster_os1_32_link_to_${tf_prefix_ext}${frame_id}_joint" type="fixed">
      <origin xyz="0 0 0.023" rpy="0 0 0" />
      <parent link="${tf_prefix_ext}ouster_os1_32_link" />
      <child link="${tf_prefix_ext}${frame_id}" />
    </joint>

    <gazebo reference="${tf_prefix_ext}ouster_os1_32_link">
      <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="${tf_prefix_ext}${frame_id}">
      <sensor type="${ray_type}" name="${tf_prefix_ext}velodyne_puck_sensor">
        <visualize>false</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>1024</samples>
              <resolution>1</resolution>
              <min_angle>-${pi}</min_angle>
              <max_angle>${pi}</max_angle>
            </horizontal>
            <vertical>
              <samples>32</samples>
              <resolution>1</resolution>
              <min_angle>-${25.5/180*pi}</min_angle>
              <max_angle>${25.5/180*pi}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>${0.0753/2.0+0.01}</min>
            <max>100.0</max>
            <resolution>0.003</resolution>
          </range>

          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.0008</stddev>
          </noise>
        </ray>
        
        <update_rate>10.0</update_rate>

        <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <namespace>/</namespace>
            <argument>~/out:=${topic}</argument>
          </ros>
          <output_type>sensor_msgs/PointCloud2</output_type>
          <frame_name>${tf_prefix_ext}${frame_id}</frame_name>
        </plugin>
      </sensor>
    </gazebo> 
  </xacro:macro>
</robot>